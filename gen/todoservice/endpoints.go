// Code generated by goa v3.12.1, DO NOT EDIT.
//
// todoservice endpoints
//
// Command:
// $ goa gen github.com/TsubasaKanemitsu/golang-todo-app/design

package todoservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "todoservice" service endpoints.
type Endpoints struct {
	AddTodoTask     goa.Endpoint
	GetTodoTask     goa.Endpoint
	GetTodoTaskList goa.Endpoint
	UpdateTodoTask  goa.Endpoint
	DeleteTodoTask  goa.Endpoint
}

// NewEndpoints wraps the methods of the "todoservice" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		AddTodoTask:     NewAddTodoTaskEndpoint(s),
		GetTodoTask:     NewGetTodoTaskEndpoint(s),
		GetTodoTaskList: NewGetTodoTaskListEndpoint(s),
		UpdateTodoTask:  NewUpdateTodoTaskEndpoint(s),
		DeleteTodoTask:  NewDeleteTodoTaskEndpoint(s),
	}
}

// Use applies the given middleware to all the "todoservice" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.AddTodoTask = m(e.AddTodoTask)
	e.GetTodoTask = m(e.GetTodoTask)
	e.GetTodoTaskList = m(e.GetTodoTaskList)
	e.UpdateTodoTask = m(e.UpdateTodoTask)
	e.DeleteTodoTask = m(e.DeleteTodoTask)
}

// NewAddTodoTaskEndpoint returns an endpoint function that calls the method
// "addTodoTask" of service "todoservice".
func NewAddTodoTaskEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*AddTodoTaskPayload)
		return s.AddTodoTask(ctx, p)
	}
}

// NewGetTodoTaskEndpoint returns an endpoint function that calls the method
// "GetTodoTask" of service "todoservice".
func NewGetTodoTaskEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetTodoTaskPayload)
		return s.GetTodoTask(ctx, p)
	}
}

// NewGetTodoTaskListEndpoint returns an endpoint function that calls the
// method "GetTodoTaskList" of service "todoservice".
func NewGetTodoTaskListEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.GetTodoTaskList(ctx)
	}
}

// NewUpdateTodoTaskEndpoint returns an endpoint function that calls the method
// "UpdateTodoTask" of service "todoservice".
func NewUpdateTodoTaskEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UpdateTodoTaskPayload)
		return s.UpdateTodoTask(ctx, p)
	}
}

// NewDeleteTodoTaskEndpoint returns an endpoint function that calls the method
// "DeleteTodoTask" of service "todoservice".
func NewDeleteTodoTaskEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteTodoTaskPayload)
		return s.DeleteTodoTask(ctx, p)
	}
}
